// <auto-generated />
using System;
using Hackathon.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace Hackathon.Migrations
{
    [DbContext(typeof(DatabaseContext))]
    partial class DatabaseContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.3")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Hackathon.Models.DodatneInformacije", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("Osobaid")
                        .HasColumnType("int");

                    b.Property<bool>("dijabetes")
                        .HasColumnType("bit");

                    b.Property<bool>("plucnaOboljenja")
                        .HasColumnType("bit");

                    b.Property<bool>("pusac")
                        .HasColumnType("bit");

                    b.Property<bool>("srcanaOboljenja")
                        .HasColumnType("bit");

                    b.HasKey("id");

                    b.HasIndex("Osobaid");

                    b.ToTable("DodatneInformacije");
                });

            modelBuilder.Entity("Hackathon.Models.KontaktOsoba", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("brojTelefona")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ime")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("prezime")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("struka")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("id");

                    b.ToTable("KontaktOsobe");
                });

            modelBuilder.Entity("Hackathon.Models.Osoba", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("brojTelefona")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("datumRodenja")
                        .HasColumnType("datetime2");

                    b.Property<string>("ime")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("kontaktOsobaid")
                        .HasColumnType("int");

                    b.Property<string>("prezime")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("struka")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("id");

                    b.HasIndex("kontaktOsobaid");

                    b.ToTable("Osobe");
                });

            modelBuilder.Entity("Hackathon.Models.Simptomi", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("Osobaid")
                        .HasColumnType("int");

                    b.Property<bool>("blagiSimptomi")
                        .HasColumnType("bit");

                    b.Property<bool>("bolovi")
                        .HasColumnType("bit");

                    b.Property<bool>("curenjeNosa")
                        .HasColumnType("bit");

                    b.Property<bool>("grlobolja")
                        .HasColumnType("bit");

                    b.Property<bool>("jakiSimptomi")
                        .HasColumnType("bit");

                    b.Property<bool>("kontaktSaZarazenomOsobom")
                        .HasColumnType("bit");

                    b.Property<bool>("proljev")
                        .HasColumnType("bit");

                    b.Property<bool>("srednjiJakiSimptomi")
                        .HasColumnType("bit");

                    b.Property<bool>("suhiKasalj")
                        .HasColumnType("bit");

                    b.Property<bool>("temperatura")
                        .HasColumnType("bit");

                    b.Property<bool>("teskocaDisanja")
                        .HasColumnType("bit");

                    b.Property<bool>("umor")
                        .HasColumnType("bit");

                    b.Property<bool>("veomaSlabiSimtomi")
                        .HasColumnType("bit");

                    b.Property<bool>("zacepljenjeNosa")
                        .HasColumnType("bit");

                    b.HasKey("id");

                    b.HasIndex("Osobaid");

                    b.ToTable("Simptomi");
                });

            modelBuilder.Entity("Hackathon.Models.DodatneInformacije", b =>
                {
                    b.HasOne("Hackathon.Models.Osoba", null)
                        .WithMany("dodatneInformacije")
                        .HasForeignKey("Osobaid");
                });

            modelBuilder.Entity("Hackathon.Models.Osoba", b =>
                {
                    b.HasOne("Hackathon.Models.KontaktOsoba", "kontaktOsoba")
                        .WithMany()
                        .HasForeignKey("kontaktOsobaid");
                });

            modelBuilder.Entity("Hackathon.Models.Simptomi", b =>
                {
                    b.HasOne("Hackathon.Models.Osoba", null)
                        .WithMany("simptomi")
                        .HasForeignKey("Osobaid");
                });
#pragma warning restore 612, 618
        }
    }
}
